# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Book @model @auth(rules: [{ allow: public }, { allow: private, operations: [read] }])
  {
  id: ID!
  title: String!
  description: String
  image: String
  author: String
  featured: Boolean
  price: Float
  orders: [BookOrder] @hasMany(indexName: "byBook", fields: ["id"])
}

type BookOrder @model @auth(rules: [{ allow: public } , { allow: owner, identityClaim: "email", ownerField: "customer" }])
  {
  id: ID!
  book_id: ID!
  order_id: ID!
  book: Book @hasOne
  order: Order @hasOne
  bookID: ID! @index(name: "byBook")
  orderID: ID! @index(name: "byOrder")
}

type Order @model @auth(rules: [{ allow: public }, { allow: owner, identityClaim: "email", ownerField: "customer" }])
  {
  id: ID!
  user: String! @index(name: "byUser")
  date: String
  total: Float
  books: [BookOrder] @hasMany(indexName: "byOrder", fields: ["id"])
}

type Mutation {
  processOrder(input: ProcessOrderInput!): OrderStatus
    @function(name: "processPayment-${env}")
    @function(name: "createOrder-${env}")
}

enum OrderStatus {
  SUCCESS
  FAILED
}

input CartItem {
  id: ID!
  title: String
  image: String
  price: Float
  amount: Int
}

input ProcessOrderInput {
  id: ID!
  cart: [CartItem]
  total: Float!
  token: String!
  address: String
}


